name:  Deploy Monitoring

on:
  push:
    branches:
      - main

  workflow_dispatch:

env:
  REPO_URL: ${{ github.server_url }}/${{ github.repository }}.git
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/private_key
          chmod 600 ~/.ssh/private_key
          cat > ~/.ssh/config << EOF
          Host ec2
              HostName $EC2_HOST
              User $EC2_USERNAME
              IdentityFile ~/.ssh/private_key
              StrictHostKeyChecking no
          EOF
      - name: Copy and checkout PR branch to EC2

        run: |
          # Clone repository if it doesn't exist, otherwise pull latest changes
           ssh ec2 "if [ -d ~/${REPO_NAME} ]; then cd ~/${REPO_NAME} && git pull; else git clone ${REPO_URL} ~/${REPO_NAME}; fi"

      - name: Execute script on EC2
        run: |
         

          # SSH into EC2 and run install + deploy
          ssh ec2 "
            sudo dpkg --configure -a
            sudo apt-get update

            if ! command -v docker &> /dev/null; then
              echo 'Installing Docker...'
              sudo apt-get update
              sudo apt-get install -y ca-certificates curl
              sudo install -m 0755 -d /etc/apt/keyrings
              sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
              sudo chmod a+r /etc/apt/keyrings/docker.asc

              arch=\$(dpkg --print-architecture)
              codename=\$(. /etc/os-release && echo \${UBUNTU_CODENAME:-\$VERSION_CODENAME})
              echo \"deb [arch=\$arch signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \$codename stable\" | \
                sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

              sudo apt-get update
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
            else
              echo 'Docker already installed.'
            fi

            if ! command -v docker &> /dev/null; then
              echo 'Docker installation failed or not found. Exiting.'
              exit 1
            fi

            echo 'Starting Docker Compose services...'
            cd ~/${REPO_NAME}
            sudo docker compose -f docker-compose.monitoring.yaml pull
            sudo docker compose -f docker-compose.monitoring.yaml up -d
          "